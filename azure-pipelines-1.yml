trigger:
  branches:
    include:
      - Dev

pr:
  branches:
    include:
      - Dev

variables:
  NODE_OPTIONS: "--max-old-space-size=6000"

pool:
  name: testPipeline  # Your self-hosted agent pool

steps:
  # Step 1: Install Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '20.11.0'
    displayName: 'Install Node.js'

  # Step 2: Install and Build React Client
  - powershell: |
      npm install
      cd client
      npm install --legacy-peer-deps
      npm run build
    displayName: 'Build React Client'

  # Step 3: Copy client build to staging
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\client\build'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\usa-dev\client\build'
    displayName: 'Copy Client Build'

  # Step 4: Copy server code
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **\*
        !client\**\*
        !node_modules\**\*
        !.git\**\*
      TargetFolder: '$(Build.ArtifactStagingDirectory)\usa-dev\server'
    displayName: 'Copy Server Code'

  # Step 5: Publish artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
    displayName: 'Publish Artifacts'

  # Step 6: Download artifacts
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(Pipeline.Workspace)'
    displayName: 'Download Artifacts'

  # âœ… Step 7: Debug - List the files to ensure path is correct
  - powershell: |
      Write-Host "Checking contents of $(Pipeline.Workspace)\drop\usa-dev\client\build"
      Get-ChildItem -Recurse "$(Pipeline.Workspace)\drop\usa-dev\client\build"
    displayName: 'Debug: List Client Build Files'

  # Step 8: Copy to Windows VM
  - task: WindowsMachineFileCopy@2
    inputs:
      SourcePath: '$(Pipeline.Workspace)\drop\usa-dev\client\build'
      MachineNames: '172.178.49.66'
      AdminUserName: 'test-vm1'
      AdminPassword: 'testPassword@1'  # Use secure variable
      TargetPath: '\\172.178.49.66\deploy'
    displayName: 'Copy Artifacts to VM'
